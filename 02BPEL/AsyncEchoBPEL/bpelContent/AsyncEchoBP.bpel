<!-- AsyncEchoBP BPEL Process [Generated by the Eclipse BPEL Designer]  -->
<!-- Date: Tue Nov 08 11:31:59 CET 2011 -->
<bpel:process name="AsyncEchoBP"
         targetNamespace="http://www.jboss.org/vut/bpel/order"
         suppressJoinFailure="yes"
         xmlns:tns="http://www.jboss.org/vut/bpel/order"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://www.jboss.org/vut/ws/echo">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://www.jboss.org/vut/ws/echo" location="EchoWS.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="AsyncEchoBPArtifacts.wsdl" namespace="http://www.jboss.org/vut/bpel/order" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
	        
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!--
        The 'client' role represents the requester of this service. It is 
        used for callback. The location and correlation information associated
        with the client role are automatically set using WS-Addressing.
        -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:AsyncEchoBP"
                     myRole="AsyncEchoBPProvider"
                     partnerRole="AsyncEchoBPRequester"
                     />
        <bpel:partnerLink name="service" partnerLinkType="tns:ServicePartnerLinkType" partnerRole="ServiceRole"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:AsyncEchoBPRequestMessage"/>
                  
        <!-- Reference to the message that will be sent back to the 
             requester during callback
             -->
        <bpel:variable name="output"
                  messageType="tns:AsyncEchoBPResponseMessage"/>
        <bpel:variable name="serviceResponse" messageType="ns:EchoService_echoResponse"></bpel:variable>
        <bpel:variable name="serviceRequest" messageType="ns:EchoService_echo"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requestor. 
             Note: This maps to operation defined in AsyncEchoBP.wsdl 
             -->
        <bpel:receive name="ReceiveInitiate" partnerLink="client"
                 portType="tns:AsyncEchoBP"
                 operation="initiate" variable="input"
                 createInstance="yes"/>
        
        <!-- Asynchronous callback to the requester.
             Note: the callback location and correlation id is transparently handled 
             using WS-addressing.
             -->
        <bpel:assign validate="no" name="Assign">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal>
                        <tns:echo xmlns:tns="http://www.jboss.org/vut/ws/echo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><message>message</message>

                        </tns:echo>
                    </bpel:literal>
                </bpel:from>
                <bpel:to variable="serviceRequest" part="echo"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input]]></bpel:query>
                </bpel:from>
                <bpel:to part="echo" variable="serviceRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[message]]></bpel:query>
                </bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="InvokeEcho" partnerLink="service" operation="echo" inputVariable="serviceRequest" outputVariable="serviceResponse"></bpel:invoke>
        
        <bpel:assign validate="no" name="Assign">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal>
                        <tns:AsyncEchoBPResponse xmlns:tns="http://www.jboss.org/vut/bpel/order" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><tns:result>tns:result</tns:result>

                        </tns:AsyncEchoBPResponse>
                    </bpel:literal>
                </bpel:from>
                <bpel:to variable="output" part="payload"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="echoResponse" variable="serviceResponse">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[return]]></bpel:query>
                </bpel:from>
                <bpel:to part="payload" variable="output">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                </bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="InvokeCallback" 
                partnerLink="client"
                portType="tns:AsyncEchoBPCallback"
                operation="onResult" 
                inputVariable="output"
                />
    </bpel:sequence>
</bpel:process>

